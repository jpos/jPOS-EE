[versions]
jpos = "3.0.0-SNAPSHOT"
commonsLang3 = "3.14.0"
quartz = "2.5.0-rc1"
slf4j = "2.0.12"
jakartaBind = "4.0.1"
junit = "5.10.2"
junitRuntime = "1.10.2"
logback = '1.4.14'
jacksonDatabind = '2.16.1'
netty = '4.1.106.Final'
freemarker = '2.3.32'
jsonSchemaValidator = '2.2.14'
guava = '33.0.0-jre'
jakartaActivation = '2.0.1'
hibernate = '6.4.4.Final'
dom4j = '2.1.4'
jdbcPostgresql = '42.7.2'
agroal = '2.3'
flyway = '10.17.0'
h2 = '2.2.224'
testcontainers = '1.19.6'
httpAsyncClient = '4.1.5'
jdbcMysql = '9.0.0'

[libraries]
jpos = { module = "org.jpos:jpos", version.ref = "jpos" }
commonsLang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commonsLang3" }
quartz = { module = "org.quartz-scheduler:quartz", version.ref = "quartz" }
junit = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junitRuntime = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junitRuntime" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
jakartaBind = { module = "jakarta.xml.bind:jakarta.xml.bind-api", version.ref = "jakartaBind" }
jclOverSlf4j = { module='org.slf4j:jcl-over-slf4j', version.ref = 'slf4j' }
log4jOverSlf4j = { module='org.slf4j:log4j-over-slf4j', version.ref = 'slf4j' }
julToSlf4j = { module='org.slf4j:jul-to-slf4j', version.ref = 'slf4j' }
logback = { module='ch.qos.logback:logback-classic', version.ref = 'logback' }
jacksonDatabind = { module='com.fasterxml.jackson.core:jackson-databind', version.ref = 'jacksonDatabind' }
nettyHandler = { module = 'io.netty:netty-handler', version.ref = 'netty' }
nettyCodecHttp = { module = 'io.netty:netty-codec-http', version.ref = 'netty' }
freemarker = { module = 'org.freemarker:freemarker', version.ref = 'freemarker' }
jsonSchemaValidator = { module = 'com.github.java-json-tools:json-schema-validator', version.ref = 'jsonSchemaValidator' }
guava = { module = 'com.google.guava:guava', version.ref = 'guava' }
jakartaActivation = { module = 'com.sun.activation:jakarta.activation', version.ref = 'jakartaActivation' }
hibernate = { module = 'org.hibernate:hibernate-core', version.ref='hibernate' }
hibernateToolsOrm = { module='org.hibernate.tool:hibernate-tools-orm', version.ref='hibernate' }
hibernateToolsUtils = { module='org.hibernate.tool:hibernate-tools-utils', version.ref='hibernate' }
dom4j = { module = 'org.dom4j:dom4j', version.ref='dom4j' }
jdbcPostgresql = { module = 'org.postgresql:postgresql', version.ref='jdbcPostgresql' }
agroal = { module = 'io.agroal:agroal-pool', version.ref='agroal' }
flyway = { module = 'org.flywaydb:flyway-core', version.ref='flyway' }
flywayPostgresql = { module = 'org.flywaydb:flyway-database-postgresql', version.ref='flyway' }
flywayMysql = { module = 'org.flywaydb:flyway-mysql', version.ref='flyway' }
h2 = { module = 'com.h2database:h2', version.ref='h2' }
testcontainersPostgresql = { module = 'org.testcontainers:postgresql', version.ref='testcontainers' }
httpAsyncClient = { module = 'org.apache.httpcomponents:httpasyncclient', version.ref = 'httpAsyncClient' }
jdbcMysql = { module = 'com.mysql:mysql-connector-j', version.ref = 'jdbcMysql' }
