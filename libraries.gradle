ext {
    jposVersion = '2.1.5-SNAPSHOT'
    slf4jVersion = '1.7.30'
    logbackVersion = '1.2.3'
    hibernateVersion = '5.4.15.Final'
    geronimoVersion = '1.1.1'
    jettyVersion = '9.4.28.v20200408'
    servletApiVersion = '4.0.1'
    websocketApiVersion = '1.1'
    jgroupsVersion = '4.2.3.Final'
    jaxrsVersion = '2.0.1'
    jsonSchemaVersion = '2.2.13'
    guavaVersion = '29.0-jre'
    jacksonVersion = '2.11.0'
    groovyVersion = '3.0.4'
    jlineVersion = '2.14.6'
    restAssuredVersion = '2.9.0'
    vaadinVersion = '8.10.0'
    nettyVersion = '4.1.49.Final'
    httpAsyncClientVersion = '4.1.4'
    mysqlJDBCVersion = '8.0.20'
    c3p0Version = '0.9.5.5'
    postgresJDBCVersion = '42.2.12'
    flywaydbVersion = '6.4.1'
    liquibaseVersion = '3.8.9'

    libraries = [
            //jUnit (Tests)
            junit: 'org.junit.jupiter:junit-jupiter:5.6.2',

            //jPOS
            jpos: "org.jpos:jpos:${jposVersion}",

            //Apache Commons
            commons_lang: 'org.apache.commons:commons-lang3:3.10',
            commons_logging: 'commons-logging:commons-logging:1.2',

            //SLF4J and logback Stuff
            slf4j_api: "org.slf4j:slf4j-api:${slf4jVersion}",
            jcl_over_slf4j: "org.slf4j:jcl-over-slf4j:${slf4jVersion}",
            log4j_over_slf4j: "org.slf4j:log4j-over-slf4j:${slf4jVersion}",
            jul_to_slf4j: "org.slf4j:jul-to-slf4j:${slf4jVersion}",

            logback: "ch.qos.logback:logback-classic:${logbackVersion}",

            //JODA-Time
            joda_time: 'joda-time:joda-time:2.10.6',

            //Hibernate
            hibernate_core: "org.hibernate:hibernate-core:${hibernateVersion}",
            hibernate_envers: "org.hibernate:hibernate-envers:${hibernateVersion}",
            hibernate_c3p0: "org.hibernate:hibernate-c3p0:${hibernateVersion}",
            c3p0: "com.mchange:c3p0:${c3p0Version}",
            hibernate_ehcache: "org.hibernate:hibernate-ehcache:${hibernateVersion}",
            jta: "org.apache.geronimo.specs:geronimo-jta_1.1_spec:${geronimoVersion}",

            //Supported Databases
            jdbcH2: 'com.h2database:h2:1.4.199',
            jdbcMysql: "mysql:mysql-connector-java:${mysqlJDBCVersion}",
            jdbcPostgresql: "org.postgresql:postgresql:${postgresJDBCVersion}",
            jdbcMssql: 'com.microsoft.sqlserver:mssql-jdbc:8.2.2.jre8',

            //Freemarker
            freemarker: 'org.freemarker:freemarker:2.3.30',

            //Mail
            javax_mail: 'javax.mail:javax.mail-api:1.6.2',

            //Jakarta Activation
            jakarta_activation: 'jakarta.activation:jakarta.activation-api:1.2.2',

            //Servlet API
            servlet_api: "javax.servlet:javax.servlet-api:${servletApiVersion}",

            //Jetty
            jetty_server: "org.eclipse.jetty:jetty-server:${jettyVersion}",
            jetty_xml: "org.eclipse.jetty:jetty-xml:${jettyVersion}",
            jetty_webapp: "org.eclipse.jetty:jetty-webapp:${jettyVersion}",
            jetty_deploy: "org.eclipse.jetty:jetty-deploy:${jettyVersion}",
            jetty_plus: "org.eclipse.jetty:jetty-plus:${jettyVersion}",
            jetty_jmx: "org.eclipse.jetty:jetty-jmx:${jettyVersion}",
            jetty_jndi: "org.eclipse.jetty:jetty-jndi:${jettyVersion}",
            jetty_annotations: "org.eclipse.jetty:jetty-annotations:${jettyVersion}",
            jetty_security: "org.eclipse.jetty:jetty-security:${jettyVersion}",
            jetty_policy: "org.eclipse.jetty:jetty-policy:${jettyVersion}",
            jetty_websocket: "org.eclipse.jetty.websocket:websocket-server:${jettyVersion}",
            jetty_websocket_jsr356: "org.eclipse.jetty.websocket:javax-websocket-server-impl:${jettyVersion}",
            jetty_rewrite: "org.eclipse.jetty:jetty-rewrite:${jettyVersion}",
            jetty_util: "org.eclipse.jetty:jetty-util:${jettyVersion}",
            jetty_servlets: "org.eclipse.jetty:jetty-servlets:${jettyVersion}",
            jetty_ajp: "org.eclipse.jetty:jetty-ajp:${jettyVersion}",
            jetty_continuation: "org.eclipse.jetty:jetty-continuation:${jettyVersion}",
            jetty_rewrite: "org.eclipse.jetty:jetty-rewrite:${jettyVersion}",

            // Quartz Scheduler
            quartz: 'org.quartz-scheduler:quartz:2.3.2',

            // JGroups
            jgroups: "org.jgroups:jgroups:${jgroupsVersion}",

            // Groovy
            groovy: "org.codehaus.groovy:groovy:${groovyVersion}",
            groovysh: "org.codehaus.groovy:groovy-groovysh:${groovyVersion}",
            groovySql: "org.codehaus.groovy:groovy-sql:${groovyVersion}",

            // Jline
            jline: "jline:jline:${jlineVersion}",

            // Jackson
            jacksonDatabind: "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",

            // Netty
            nettyHandler: "io.netty:netty-handler:${nettyVersion}",
            nettyCodecHttp: "io.netty:netty-codec-http:${nettyVersion}",

            // RestAssured
            restAssured: "io.rest-assured:rest-assured:4.3.0",

            jsonSchemaValidator: "com.github.java-json-tools:json-schema-validator:${jsonSchemaVersion}",
            guava: "com.google.guava:guava:${guavaVersion}",
            httpAsyncClient: "org.apache.httpcomponents:httpasyncclient:${httpAsyncClientVersion}",
            flywaydb: "org.flywaydb:flyway-core:${flywaydbVersion}",
            liquibase: "org.liquibase:liquibase-core:${liquibaseVersion}"
    ]

    jsonSchemaValidatorLibs = [
        libraries.jsonSchemaValidator,
        libraries.guava
    ]

    jettyLibs = [
            libraries.jetty_server,
            libraries.jetty_xml,
            libraries.jetty_webapp,
            libraries.jetty_deploy,
            libraries.jetty_jmx,
            libraries.jetty_annotations,
            libraries.jetty_websocket,
            libraries.jetty_websocket_jsr356,
            libraries.jetty_security,
            libraries.jetty_continuation,
            libraries.jetty_rewrite
    ]

    /*
            libraries.jetty_plus,
            libraries.jetty_jndi,
            libraries.jetty_annotations,
            libraries.jetty_policy,

            libraries.jetty_servlets,
            libraries.jetty_ajp
    */
}
